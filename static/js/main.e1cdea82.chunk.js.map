{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/todos.tsx","index.tsx"],"names":["Filter","TodoList","todos","onSelect","selectedTodo","className","map","todo","id","completed","title","classNames","onClick","type","TodoFilter","filterBy","queryFilterValue","queryFilterBy","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectTodo","selectTodoBy","useState","user","setUser","loading","setLoading","useEffect","userId","finally","href","email","name","App","setTodos","todosLoading","setTodosLoading","setSelectTodo","filter","setFilter","queryFilter","setQueryFilter","respons","ok","Error","status","statusText","catch","visibleTodos","todose","filters","query","preparedTodos","normalizedQuery","toLowerCase","trim","includes","getFilterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1cdea82.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelect?: (tod: Todo) => void;\n  selectedTodo: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelect = () => {},\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const { id, completed, title } = todo;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={id}>\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                <i\n                  className={classNames('fas', {\n                    'fa-check': completed === true,\n                  })}\n                />\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  onClick={() => onSelect(todo)}\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    {selectedTodo?.id === id ? (\n                      <i className=\"far fa-eye-slash\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filterBy: (value: Filter) => void;\n  queryFilterValue: string;\n  queryFilterBy: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  queryFilterValue,\n  queryFilterBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => filterBy(event.target.value as Filter)}\n        >\n          <option value={Filter.ALL}>All</option>\n          <option value={Filter.ACTIVE}>Active</option>\n          <option value={Filter.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={queryFilterValue}\n        onChange={(event) => queryFilterBy(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => queryFilterBy('')}\n        />\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectTodo: Todo;\n  selectTodoBy: (x: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  selectTodoBy = () => {},\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const { title, completed, id } = selectTodo;\n\n  useEffect(() => {\n    getUser(selectTodo?.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [selectTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodoBy(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed === true ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './utils/todos';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState([]);\n  const [todosLoading, setTodosLoading] = useState(false);\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(Filter.ALL);\n  const [queryFilter, setQueryFilter] = useState('');\n\n  function getFilterTodos(todose: Todo[], filters: string, query: string) {\n    let preparedTodos = [...todose];\n    const normalizedQuery = query.toLowerCase().trim();\n\n    switch (filters) {\n      case Filter.ACTIVE:\n        preparedTodos = preparedTodos.filter(\n          (todo) => todo.completed === false,\n        );\n        break;\n\n      case Filter.COMPLETED:\n        preparedTodos = preparedTodos.filter((todo) => todo.completed === true);\n        break;\n\n      default:\n        break;\n    }\n\n    if (normalizedQuery) {\n      preparedTodos = preparedTodos.filter(\n        (todo: Todo) => todo.title.toLowerCase().includes(normalizedQuery),\n      );\n    }\n\n    return preparedTodos;\n  }\n\n  useEffect(() => {\n    setTodosLoading(true);\n    setTimeout(() => {\n      getTodos()\n        .then((todo) => {\n          setTodos(todo);\n        })\n        .catch(() => {})\n        .finally(() => setTodosLoading(false));\n    }, 1000);\n  }, []);\n\n  const visibleTodos = getFilterTodos(todos, filter, queryFilter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={setFilter}\n                queryFilterValue={queryFilter}\n                queryFilterBy={setQueryFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosLoading && <Loader />}\n\n              {!todosLoading && (<TodoList todos={visibleTodos} onSelect={setSelectTodo} selectedTodo={selectTodo} />)}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodo && (\n        <TodoModal selectTodo={selectTodo} selectTodoBy={setSelectTodo} />\n      )}\n    </>\n  );\n};\n","export function getTodos() {\n  return fetch(\n    'https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json',\n  ).then((respons) => {\n    if (!respons.ok) {\n      throw new Error(`${respons.status} ${respons.statusText}`);\n    }\n\n    return respons.json();\n  });\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}